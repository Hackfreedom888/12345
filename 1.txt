pd.read_csv()用于读取csv文件
unique()是以 数组形式（numpy.ndarray）返回列的所有唯一值
str.contains 相当于sql的like sa
sns.pairplot 散点图  kind = 'reg'拟合出一条回归直线
corr()相关性
sort_values可根据指定列数据也可根据指定行的数据排序  ascending=False代表降序
LinearRegression() 线性回归
pd.DataFrame 创建二维表
def  如果我们用代码实现了一个小功能，
但想要在程序代码中重复使用，
不能在代码中到处粘贴这些代码，
因为这样做违反了软件工程中DRY原则。 
Python提供 def函数功能，
可以将我们这部分功能抽象成一个函数以方便程序调用，
或者提供给其他模块使用。
import tabpy_client
client = tabpy_client.Client('http://localhost:9004')
在部署add函数之前，首先需要定义我们将要部署的服务器及端口
client.deploy  
使用deploy将函数部署到服务上


题目描述：某公司要针对员工情况统一调薪，现有一个员工列表，包含姓名、职级、工作年限、工资信息。现要求将该列表按以下规则重新排序：

1、职级高的排在前面

2、若职级相同，按工资少的排前面

3、若工资相同，工作年限长的排前面

输入描述：第一行输入一个整数n，表示员工列表中员工的人数

接下来的n行，分别输入员工的姓名、职级、工作年限和工资信息，各项信息用空格分隔

输出描述：输出按要求重新排列的员工列表，每名员工信息（姓名、职级、工作年限和工资）占一行

n = int(input())
emps = [[emp[0],int(emp[1]),int(emp[2]),float(emp[3])] for emp in
        (input().strip().split(' ') for i in range(n))]
emps=sorted(emps,key=lambda x:(x[1],-x[3],x[2]), reverse=True)
for emp in emps:
    print('{} {} {} {:.2f}'.format(*emp))
    #print(i[0],i[1],i[2],'%.2f'%i[3]) #这种写法也可


a=input()
b=input()

a=int(a[2:])
b=int(b[2:])

a,b=b,a

a=str(a)
b=str(b)

a='a='+a
b='b='+b

print(a)
print(b)
